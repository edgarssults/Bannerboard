@inherits WidgetBase

<div class="card">
    <div class="card-header">
        <div class="d-flex">
            <div class="align-self-center">Heroes</div>
            @if (allHeroes != null)
            {
                <div class="ml-auto">
                    @if (isSearchBoxVisible)
                    {
                        <Autocomplete
                            @ref="heroSearch"
                            SelectedText="@SelectedText"
                            TItem="HeroTrackerReturnDataItem"
                            TValue="string"
                            Data="@allHeroes"
                            TextField="@(item => item.Name)"
                            ValueField="@(item => item.Id)"
                            Placeholder="Hero name..."
                            SelectedValueChanged="async e => await SelectedHeroChangedAsync(e)"
                            Filter="AutocompleteFilter.Contains"
                            MinLength="2"
                            FreeTyping>
                            <NotFoundContent>Hero not found...</NotFoundContent>
                        </Autocomplete>
                    }
                    else
                    {
                        <button class="btn btn-secondary" type="button" title="Search" @onclick="async e => await ShowSearchBox()">
                            <i class="fa fa-search"></i>
                        </button>
                    }
                </div>
            }
        </div>
    </div>
    <div class="card-body">
        @if (heroModel != null)
        {
            if (heroModel.Heroes.Any())
            {
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Last seen</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var hero in heroModel.Heroes)
                        {
                            <tr>
                                <td class="align-middle @((hero.IsDead || hero.IsDisabled) ? "text-decoration-line-through" : string.Empty)">@hero.Name</td>
                                <td class="align-middle">@hero.Location</td>
                                <td class="align-middle text-right">
                                    <button class="btn btn-secondary" type="button" title="Toggle map tracking" @onclick="async e => await TrackingStatusChangedAsync(hero)">
                                        <i class="fa @(hero.IsShownOnMap ? "fa-check-circle" : "fa-circle") fa-fw"></i>
                                    </button>
                                    <button class="btn btn-secondary" type="button" title="Remove" @onclick="async e => await RemoveHeroAsync(hero)">
                                        <i class="fa fa-times fa-fw"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <span>Select a hero to track by clicking the search button above...</span>
            }
        }
        else
        {
            <span>No data or incompatible mod version.</span>
        }
    </div>
</div>
